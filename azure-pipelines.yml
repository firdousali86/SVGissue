# Android
# Build your Android project with Gradle.
# Add steps that test, sign, and distribute the APK, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/android

trigger:
  - main

pool:
  vmImage: 'macos-latest'

steps:
  - task: JavaToolInstaller@0
    inputs:
      versionSpec: '17'
      jdkArchitectureOption: 'x64'
      jdkSourceOption: 'PreInstalled'

  - task: NodeTool@0
    inputs:
      versionSpec: '18.x'
    displayName: 'Install Node.js'

  - script: |
      npm install -g react-native-cli
      npm install
    displayName: 'Install NPM packages'

  - task: DownloadSecureFile@1
    name: releaseKeystore
    displayName: 'Download Release Keystore file'
    inputs:
      secureFile: 'my-upload-key.keystore'

  - script: |
      echo "MYAPP_UPLOAD_STORE_FILE=$(releaseKeystore.secureFilePath)" >> $HOME/.gradle/gradle.properties
      echo "MYAPP_UPLOAD_KEY_ALIAS=my-key-alias" >> $HOME/.gradle/gradle.properties
      echo "MYAPP_UPLOAD_STORE_PASSWORD=android" >> $HOME/.gradle/gradle.properties
      echo "MYAPP_UPLOAD_KEY_PASSWORD=android" >> $HOME/.gradle/gradle.properties
    displayName: 'Update gradle.properties with keystore file path'

  - script: |
      echo "android.signingConfigs.release.storeFile = file(\"$(releaseKeystore.secureFilePath)\")" >> android/app/build.gradle
    displayName: 'Update build.gradle with keystore file path'

  - script: |
      cd android
      ./gradlew clean
      ./gradlew --refresh-dependencies
      ./gradlew assembleRelease
    displayName: 'Build Android APK'
